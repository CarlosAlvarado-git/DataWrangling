# Programa regresion datos reales
# Daniel Fernandez Universidad Francisco Marroquin

rm(list = ls())

#Cargar base datos M2 Banguat
library(readxl)
dat1 <- read_excel("Medio circulante.xls")
dat1 <- read_excel("Medio circulante.xls", skip = 3)
dat1 <- dat1[-c(13:16), -30]
dat1$MES <- c(1:12)
colnames(dat1) <- c("MES", 1995:2022)

library(tidyr)
dat2 <- gather(dat1, key = "Ano", value = "M2", 2:29)
dat3 <- unite(dat2, "Fecha", 2:1, sep = "-")
dat3 <- na.omit(dat3)

library(zoo)
dat3$Fecha <- as.Date(dat3$Fecha)
dat3$Fecha <- as.Date(as.yearmon(dat3$Fecha))

#cargar base de datos de inflación
dat11 <- read_excel("imm01.xls", skip = 5)
dat11 <- dat11[-13,]
dat11$Periodo <- c(1:12)
dat22 <- gather(dat11, key = "Ano", "Inflacion", 2:28)
dat33 <- unite(dat22, "Fecha", 2:1, sep = "-")
dat33 <- na.omit(dat33) # tener cuidado. 
dat33$Fecha <- as.Date(as.yearmon(dat33$Fecha))

data_final <- merge(dat3,dat33, by = "Fecha", all = TRUE)

# Conseguir cambio M2
library(quantmod)
data_final$cambioM2 <- Delt(data_final$M2, k = 12)
# Poner la inflación en tanto por 1
library(dplyr)
data_final <- mutate(data_final, Inflacion = Inflacion / 100)
#data_final <- mutate(data_final, cambioM2 = cambioM2 * 100)

# PRIMER MODELO
modelo1 <- lm(data = data_final, Inflacion ~ cambioM2)
summary(modelo1)
# Inflación       <- 4.55% + 10.81%*cambioM2 + Ut
#Desviación Típica   0.004   0.0348
#B1^ - 1.96(0.0348) < B1^ < B1^ + 1.96(0.0348)
#     ESTIMACION POR INTERVALO: "SUPONER UNA NORMAL"
      #DEJA EL 95% DE LA PROBABILIDAD 1.96 DEJA EL 95%
      # 2.58 VECES DEJA EL 99%
#             0.0395 < B1^ < 0.1787 #esto de 95%
#             0.0178 < B1^ < 0.1974 #esto con 99%
# H0: Bi = 0
# HA: Bi != 0
# t value = B/desv(b) 
# t value es la relacion entre la media del beta y la desviación del mismo
# t value mientras más grande es, significa que la dispersión del beta
        # es demaciado pequeña, mi rango de la misma es más pequeño. 
# la regla es que el t debe de ser encima de 2. t > 2. porque el 
# el 2 es el valor crítico, porque justo justo, incluye el 0. Es decir, justo
# en 1,96, 95% seguro. con 2.58, 99% seguro que lo saque. 

# El Pr(>|t|) dice justamente la probabilidaad de que salga el 0. 
# es decir, mustra que taan seguro estoy. 

#GRAFICAS

library(ggplot2)
ggplot(data = data_final, aes(cambioM2, Inflacion)) + geom_point() + geom_smooth(method = "lm")

ggplot(data = data_final, aes(Fecha, cambioM2)) + geom_point() + geom_smooth(method = "lm")
ggplot(data = data_final, aes(Fecha, Inflacion)) + geom_point() + geom_smooth(method = "lm")

#Segundo moddelo (medias moviles)
#Primero calculamos mediaas moviles

library(pracma)
data_final$cambioM2mm <- movavg(data_final$cambioM2, n = 12, type = "s")
data_final$Inflacionmm <- movavg(data_final$Inflacion, n = 12, type = "s")

modelo2 <- lm(data = data_final, Inflacionmm ~ cambioM2mm)
summary(modelo2)
ggplot(data = data_final, aes(cambioM2mm, Inflacionmm)) + geom_point() + geom_smooth(method = "lm")


datpet<-read_excel("Pet.xlsx")
str(datpet) 
datpet$Fecha <- as.Date(datpet$Fecha)
datpet <- datpet[,c(1,2)]
colnames(datpet) <- c("Fecha", "petroleo")
data_final2 <- merge(x = data_final, y = datpet, by = "Fecha", all = TRUE)
#cambio en el precio 
data_final2$petroleo <- Delt(data_final2$petroleo, k = 12)
#media movil del petroleo
data_final2$cambiopetmm <- movavg(data_final2$petroleo, n =12, type = "s")
# Tercer modelo
modelo3 <- lm(data = data_final2, Inflacionmm ~ cambioM2mm + cambiopetmm)
summary(modelo3)
# Modelo con lag en inflación
data_final2$cambioM2mmlag <- lag(data_final2$cambioM2mm, 12)
#modelo 4
modelo4 <- lm(data = data_final2, Inflacionmm ~ cambioM2mmlag + cambiopetmm)
summary(modelo4)
# Lag en los precios petroleo 
data_final2$cambiopetmmlag <- lag(data_final2$cambiopetmm, 6)
# modelo 5
modelo5 <- lm(data = data_final2, Inflacionmm ~ cambioM2mmlag + cambiopetmmlag)
summary(modelo5)



#SACAR COSAS DEL MODELO
Betas <- modelo5$coefficients
Betas

Estimaciones <- modelo5$fitted.values
Estimaciones

#intervalos de confianza 
confint(modelo5, level = 0.95)
confint(modelo1, level = 0.95)
confint(modelo5, level = 0.99)

#Estimadores puntuales. 

datprueba <- data.frame(cambioM2mmlag = 0.18, cambiopetmmlag = 0.1)
precciones <- predict(modelo5, datprueba, interval = "confidence")
precciones
library(jtools)
effect_plot(modelo5, pred = cambioM2mmlag, interval = TRUE, plot.points =TRUE)
effect_plot(modelo5, pred = cambiopetmmlag, interval = TRUE, plot.points =TRUE)

# Exportar base datos con cambios
write.csv2(data_final2, file = "Base Limpia.csv")
